---
title: "Evy's Data Analysis for Python Final Project"
format: pdf
---


```{python}
import pandas as pd
import altair as alt
```

```{python}
import warnings

# Suppress specific FutureWarnings
warnings.filterwarnings("ignore", category=FutureWarning)
```

```{python}
path = r"/Users/evylanai/Documents/GitHub/python_final_project/df.csv"
df = pd.read_csv(path)
```

```{python}
# Show correlation with Master's degree 
# posession and STAAR scores
masters_STAAR_scatter = alt.Chart(df).transform_fold(
    ['All_ELA_District_Meets', 'All_Math_District_Meets'], 
    as_=['Subject', 'Percentage_Meeting_Grade_Level']
).transform_calculate(
    Subject_Label=alt.expr.if_(
        alt.datum.Subject == 'All_ELA_District_Meets',
        'Reading',  
        'Math' 
    )
).mark_circle(size=50).encode(
    x=alt.X('Teachers_Masters:Q', title='% Teachers with Masters Degree'),  # X-axis
    y=alt.Y('Percentage_Meeting_Grade_Level:Q', title='% of Students Meeting Grade Level'),
    color=alt.Color(
        'Subject_Label:N',  
        scale=alt.Scale(range=['red', 'blue']),  
        legend=alt.Legend(title='Subject')
    ),
    tooltip=['Subject_Label:N', 'Teachers_Masters:Q', 'Percentage_Meeting_Grade_Level:Q']
).properties(
    title='Student Proficiency vs. % Teachers with Masters (ELA & Math)',
    width=600,
    height=400
)

regression_line = alt.Chart(df).transform_fold(
    ['All_ELA_District_Meets', 'All_Math_District_Meets'], 
    as_=['Subject', 'Percentage_Meeting_Grade_Level']
).transform_calculate(
    Subject_Label=alt.expr.if_(
        alt.datum.Subject == 'All_ELA_District_Meets', 'Reading', 'Math'
    )
).transform_regression(
    'Teachers_Masters', 'Percentage_Meeting_Grade_Level', groupby=['Subject_Label']
).mark_line().encode(
    x='Teachers_Masters:Q',
    y='Percentage_Meeting_Grade_Level:Q',
    color='Subject_Label:N'
)

masters_STAAR_scatter = masters_STAAR_scatter + regression_line

# Save and show plot
masters_STAAR_scatter.save('masters_STAAR_scatter.png', format='png')
```

```{python}
# Show correlation with teacher years of experience 
# and math and reading STAAR scores
years_STAAR_scatter = alt.Chart(df).transform_fold(
    ['All_ELA_District_Meets', 'All_Math_District_Meets'], 
    as_=['Subject', 'Percentage_Meeting_Grade_Level']
).transform_calculate(
    Subject_Label=alt.expr.if_(
        alt.datum.Subject == 'All_ELA_District_Meets',
        'Reading',  
        'Math' 
    )
).mark_circle(size=50).encode(
    x=alt.X('Years_Experience_Teachers:Q', title='Average Teacher Years of Experience'),  # X-axis
    y=alt.Y('Percentage_Meeting_Grade_Level:Q', title='% of Students Meeting Grade Level'),
    color=alt.Color(
        'Subject_Label:N',  
        scale=alt.Scale(range=['red', 'blue']),  
        legend=alt.Legend(title='Subject')
    )
).properties(
    title='Student Proficiency vs. Average Teacher Years of Experience (ELA & Math)',
    width=600,
    height=400
)

regression_line = alt.Chart(df).transform_fold(
    ['All_ELA_District_Meets', 'All_Math_District_Meets'], 
    as_=['Subject', 'Percentage_Meeting_Grade_Level']
).transform_calculate(
    Subject_Label=alt.expr.if_(
        alt.datum.Subject == 'All_ELA_District_Meets', 'Reading', 'Math'
    )
).transform_regression(
    'Years_Experience_Teachers', 'Percentage_Meeting_Grade_Level', groupby=['Subject_Label']
).mark_line().encode(
    x='Years_Experience_Teachers:Q',
    y='Percentage_Meeting_Grade_Level:Q',
    color='Subject_Label:N'
)

years_STAAR_scatter = years_STAAR_scatter + regression_line

# Save and show plot
years_STAAR_scatter.save('years_STAAR_scatter.png', format='png')
```




